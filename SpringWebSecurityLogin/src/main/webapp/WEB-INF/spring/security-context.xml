<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
	<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean> -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean>


	<!--
		pattern : URL의 패턴을 의미
		access : 권한을 체크
			- 1) 표현식
			- 2) 권한명
			<security:http>는 기본 설정이 표현식을 이용하는 것이다.
			단순 문자열만을 이용하고 싶을 경우에는 use-expressins="false"를 지정한다.
	 -->
	<security:http>
		<security:intercept-url pattern="/sample/all" access="permitAll" />
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />
		<security:access-denied-handler ref="customAccessDenied" />
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />

		<!-- <security:csrf disabled="true"/> -->

		<security:logout logout-url="/customLogout" invalidate-session="true" />
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />
	</security:http>



	<!--
		<security:authentication-manager>
		<security:authentication-provider>
		<security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		</security:user-service>
		</security:authentication-provider>
		</security:authentication-manager>
	-->

	<!--
		<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" />
				<security:jdbc-user-service data-source-ref="dataSource"
						users-by-username-query="select userid , userpw ,
						enabled from tbl_member where userid = ? " authorities-by-username-query="select
						userid, auth from tbl_member_auth where userid = ? " />
			<security:password-encoder ref="customPasswordEncoder" />
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
		</security:authentication-manager>
	-->

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
